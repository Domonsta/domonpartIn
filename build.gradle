buildscript {
    ext{
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.zerock'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0'


//    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0' // 주석처리 하니까 테스트 성공
//    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'


    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta" // ⬅️ 여기에 :jakarta 추가!
    annotationProcessor(
            "jakarta.persistence:jakarta.persistence-api", // ⬅️ 이걸로 변경!
            "jakarta.annotation:jakarta.annotation-api",   // ⬅️ 이걸로 변경!
            "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta" // ⬅️ 여기도 :jakarta 추가!
    )

    implementation 'org.modelmapper:modelmapper:3.1.0'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

}

tasks.named('test') {
    useJUnitPlatform()
}

sourceSets {
    main{
        java {
            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
        }
    }
}

compileJava.dependsOn('clean')